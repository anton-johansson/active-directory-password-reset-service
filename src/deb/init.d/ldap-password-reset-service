#!/bin/sh
# /etc/init.d/ldap-password-reset-service

# Copyright (c) Anton Johansson <antoon.johansson@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

### BEGIN INIT INFO
# Provides:          ldap-password-reset-service
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the LDAP Password Reset Service
# Description:       This file is used to start the daemon
#                    and should be placed in /etc/init.d
### END INIT INFO

# Author:   Anton Johansson <antoon.johansson@gmail.com>
# URL:      www.anton-johansson.com
# Date:     2016-06-13

SERVICE_NAME="ldap-password-reset-service"
PID_FILE="/var/run/$SERVICE_NAME.pid"
JAVA_OPTS=""
JAVA_OPTS="$JAVA_OPTS -DconfigurationFile=/etc/$SERVICE_NAME/$SERVICE_NAME.conf"
JAVA_OPTS="$JAVA_OPTS -Dlog4j.configurationFile=/etc/$SERVICE_NAME/log4j2.xml"
CLASSPATH="/var/lib/$SERVICE_NAME/bin/*"
MAINCLASS="com.antonjohansson.lprs.Application"
EXEC_START="/usr/bin/java $JAVA_OPTS -cp \"$CLASSPATH\" $MAINCLASS"

do_start()
{
    if [ -f ${PID_FILE} ] && kill -0 $(cat ${PID_FILE}) > /dev/null 2>&1; then
        echo "${SERVICE_NAME} is running, pid $(cat ${PID_FILE})"
        exit 1
    else
        nohup ${EXEC_START} > /dev/null 2>&1 &
        if [ $? -eq 0 ]; then
            PID=$!
            echo ${PID} > ${PID_FILE}
            echo "${SERVICE_NAME} started, pid ${PID}"
        else
            echo "${SERVICE_NAME} failed to start, exiting..."
            exit 1
        fi
    fi
}

do_stop()
{
    if [ ! -f ${PID_FILE} ] || ! kill -0 $(cat ${PID_FILE}) > /dev/null 2>&1; then
        echo "${SERVICE_NAME} is not running"
        exit 1
    else
        kill $(cat ${PID_FILE}) && rm -f ${PID_FILE}
        echo "${SERVICE_NAME} stopped"
    fi
}

do_status()
{
    if [ -f ${PID_FILE} ] && kill -0 $(cat ${PID_FILE}) > /dev/null 2>&1; then
        echo "${SERVICE_NAME} is running, pid $(cat ${PID_FILE})"
    else
        echo "${SERVICE_NAME} is not running"
    fi
}

case "$1" in

    start)
        do_start
    ;;

    stop)
        do_stop
    ;;

    restart|force-reload)
        do_stop
        do_start
    ;;

    status)
        do_status
    ;;

    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
    ;;

esac
